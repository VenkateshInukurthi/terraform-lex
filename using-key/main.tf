provider "aws" {
  region = "ap-south-1"  # Change to your desired AWS region
}

# Generate a new SSH key pair using the local-exec provisioner
resource "tls_private_key" "my_key" {
  algorithm = "RSA"
  rsa_bits  = 2048
}

# Create AWS Key Pair using the private key generated by Terraform
resource "aws_key_pair" "my_key_pair" {
  key_name   = "MyGeneratedKeyPair"
  public_key = tls_private_key.my_key.public_key_openssh
}

# Create a Security Group that allows SSH access
resource "aws_security_group" "allow_ssh" {
  name        = "allow_ssh"
  description = "Allow SSH inbound traffic"
  
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Open to all IPs; you can restrict to your IP
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Launch an EC2 instance using the created key pair
resource "aws_instance" "my_instance" {
  ami           = "ami-03b8a287edc0c1253"  # Replace with your desired AMI
  instance_type = "t2.micro"
  key_name      = aws_key_pair.my_key_pair.key_name
  security_groups = [aws_security_group.allow_ssh.name]

  tags = {
    Name = "MyTerraformEC2Instance"
  }
}

# Output the EC2 instance's public IP address
output "instance_public_ip" {
  value = aws_instance.my_instance.public_ip
}

# Save the private key locally using a local-exec provisioner
resource "null_resource" "save_private_key" {
  provisioner "local-exec" {
    command = "echo '${tls_private_key.my_key.private_key_pem}' > my_ec2_private_key.pem"
  }

  depends_on = [aws_key_pair.my_key_pair]
}
